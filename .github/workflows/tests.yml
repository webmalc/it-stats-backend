name: tests
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: its_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
      
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Install environments
      run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.23.3
          sudo cp bin/golangci-lint /usr/local/bin/golangci-lint
          go get -u github.com/klmitch/overcover
          go get -u golang.org/x/lint/golint
          npm install -g codeclimate-test-reporter

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Test
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        make testall
        bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Codebeat
      run: |
        codeclimate-test-reporter < coverage.out
      env:
        CODECLIMATE_API_HOST: https://codebeat.co/webhooks/code_coverage
        CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
