// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	admin "github.com/qor/admin"

	mock "github.com/stretchr/testify/mock"
)

// AdminResource is an autogenerated mock type for the AdminResource type
type AdminResource struct {
	mock.Mock
}

// EditAttrs provides a mock function with given fields: values
func (_m *AdminResource) EditAttrs(values ...interface{}) []*admin.Section {
	var _ca []interface{}
	_ca = append(_ca, values...)
	ret := _m.Called(_ca...)

	var r0 []*admin.Section
	if rf, ok := ret.Get(0).(func(...interface{}) []*admin.Section); ok {
		r0 = rf(values...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*admin.Section)
		}
	}

	return r0
}

// Filter provides a mock function with given fields: filter
func (_m *AdminResource) Filter(filter *admin.Filter) {
	_m.Called(filter)
}

// IndexAttrs provides a mock function with given fields: values
func (_m *AdminResource) IndexAttrs(values ...interface{}) []*admin.Section {
	var _ca []interface{}
	_ca = append(_ca, values...)
	ret := _m.Called(_ca...)

	var r0 []*admin.Section
	if rf, ok := ret.Get(0).(func(...interface{}) []*admin.Section); ok {
		r0 = rf(values...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*admin.Section)
		}
	}

	return r0
}

// NewAttrs provides a mock function with given fields: values
func (_m *AdminResource) NewAttrs(values ...interface{}) []*admin.Section {
	var _ca []interface{}
	_ca = append(_ca, values...)
	ret := _m.Called(_ca...)

	var r0 []*admin.Section
	if rf, ok := ret.Get(0).(func(...interface{}) []*admin.Section); ok {
		r0 = rf(values...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*admin.Section)
		}
	}

	return r0
}

// ShowAttrs provides a mock function with given fields: values
func (_m *AdminResource) ShowAttrs(values ...interface{}) []*admin.Section {
	var _ca []interface{}
	_ca = append(_ca, values...)
	ret := _m.Called(_ca...)

	var r0 []*admin.Section
	if rf, ok := ret.Get(0).(func(...interface{}) []*admin.Section); ok {
		r0 = rf(values...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*admin.Section)
		}
	}

	return r0
}
